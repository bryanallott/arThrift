#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#


module ArThrift
    module Status
      INACTIVE = 0
      ACTIVE = 1
      SUSPENDED = 2
      VALUE_MAP = {0 => "INACTIVE", 1 => "ACTIVE", 2 => "SUSPENDED"}
      VALID_VALUES = Set.new([INACTIVE, ACTIVE, SUSPENDED]).freeze
    end

    class User
      include ::Thrift::Struct
      USERNAME = 1
      MY_STATUS = 2

      ::Thrift::Struct.field_accessor self, :username, :my_status
      FIELDS = {
        USERNAME => {:type => ::Thrift::Types::STRING, :name => 'username'},
        MY_STATUS => {:type => ::Thrift::Types::I32, :name => 'my_status', :enum_class => ArThrift::Status}
      }

      def struct_fields; FIELDS; end

      def validate
        unless @my_status.nil? || ArThrift::Status::VALID_VALUES.include?(@my_status)
          raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field my_status!')
        end
      end

    end

    class Comment
      include ::Thrift::Struct
      AUTHOR = 1
      BODY = 2
      PUBLISHED = 3

      ::Thrift::Struct.field_accessor self, :author, :body, :published
      FIELDS = {
        AUTHOR => {:type => ::Thrift::Types::STRUCT, :name => 'author', :class => ArThrift::User},
        BODY => {:type => ::Thrift::Types::STRING, :name => 'body'},
        PUBLISHED => {:type => ::Thrift::Types::BOOL, :name => 'published'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

    class Project
      include ::Thrift::Struct
      NAME = 1

      ::Thrift::Struct.field_accessor self, :name
      FIELDS = {
        NAME => {:type => ::Thrift::Types::STRING, :name => 'name'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end
=begin
    class User
      include ::Thrift::Struct
      USERNAME = 1

      ::Thrift::Struct.field_accessor self, :username
      FIELDS = {
        USERNAME => {:type => ::Thrift::Types::STRING, :name => 'username'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end
=end

    class InvalidOperation < ::Thrift::Exception
      include ::Thrift::Struct
      WHAT = 1
      WHY = 2

      ::Thrift::Struct.field_accessor self, :what, :why
      FIELDS = {
        WHAT => {:type => ::Thrift::Types::I32, :name => 'what'},
        WHY => {:type => ::Thrift::Types::STRING, :name => 'why'}
      }

      def struct_fields; FIELDS; end

      def validate
      end

    end

  end
